"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.default=void 0;var _react=_interopRequireDefault(require("react"));var _propTypes=_interopRequireDefault(require("prop-types"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key]}}}return target};return _extends.apply(this,arguments)}function _objectWithoutProperties(source,excluded){if(source==null)return{};var target=_objectWithoutPropertiesLoose(source,excluded);var key,i;if(Object.getOwnPropertySymbols){var sourceSymbolKeys=Object.getOwnPropertySymbols(source);for(i=0;i<sourceSymbolKeys.length;i++){key=sourceSymbolKeys[i];if(excluded.indexOf(key)>=0)continue;if(!Object.prototype.propertyIsEnumerable.call(source,key))continue;target[key]=source[key]}}return target}function _objectWithoutPropertiesLoose(source,excluded){if(source==null)return{};var target={};var sourceKeys=Object.keys(source);var key,i;for(i=0;i<sourceKeys.length;i++){key=sourceKeys[i];if(excluded.indexOf(key)>=0)continue;target[key]=source[key]}return target}/**
 * A tag item inside the AUtags component
 *
 * @param  {string}  link             - The link for this tag, optional
 * @param  {string}  text             - The text for the tag
 * @param  {object}  li               - An additional object to be spread into the wrapping element, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUtagItem=function AUtagItem(_ref){var link=_ref.link,linkComponent=_ref.linkComponent,text=_ref.text,_ref$li=_ref.li,li=_ref$li===void 0?{}:_ref$li,attributeOptions=_objectWithoutProperties(_ref,["link","linkComponent","text","li"]);var LinkComponent=linkComponent;if(link){// If we are using a normal link
if(LinkComponent==="a"){attributeOptions.href=link}// If we are using a link component
else if(typeof LinkComponent==="function"){attributeOptions.to=link}}return _react.default.createElement("li",li,link?_react.default.createElement(LinkComponent,attributeOptions,text):_react.default.createElement("span",attributeOptions,text))};AUtagItem.propTypes={link:_propTypes.default.string,text:_propTypes.default.string.isRequired,li:_propTypes.default.object,linkComponent:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.func])};AUtagItem.defaultProps={linkComponent:"a"};/**
 * DEFAULT
 * The tags component
 *
 * @param  {boolean} dark             - Add the dark variation class, optional
 * @param  {array}   tags             - The tags, format: { link: '', text: '', onClick: () }
 * @param  {string}  className        - An additional class, optional
 * @param  {object}  attributeOptions - Any other attribute options
 */var AUtags=function AUtags(_ref2){var dark=_ref2.dark,linkComponent=_ref2.linkComponent,tags=_ref2.tags,_ref2$className=_ref2.className,className=_ref2$className===void 0?"":_ref2$className,attributeOptions=_objectWithoutProperties(_ref2,["dark","linkComponent","tags","className"]);return _react.default.createElement("ul",_extends({className:"au-tags ".concat(className," ").concat(dark?"au-tags--dark":"")},attributeOptions),tags.map(function(tag,i){return _react.default.createElement(AUtagItem,_extends({linkComponent:linkComponent,key:i},tag))}))};AUtags.propTypes={dark:_propTypes.default.bool,tags:_propTypes.default.arrayOf(_propTypes.default.shape({link:_propTypes.default.string,text:_propTypes.default.string.isRequired,li:_propTypes.default.object})).isRequired,className:_propTypes.default.string,linkComponent:_propTypes.default.oneOfType([_propTypes.default.string,_propTypes.default.func])};AUtags.defaultProps={linkComponent:"a"};var _default=AUtags;exports.default=_default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlYWN0LmVzNS5qcyJdLCJuYW1lcyI6WyJBVXRhZ0l0ZW0iLCJsaW5rIiwibGlua0NvbXBvbmVudCIsInRleHQiLCJsaSIsImF0dHJpYnV0ZU9wdGlvbnMiLCJMaW5rQ29tcG9uZW50IiwiaHJlZiIsInRvIiwicHJvcFR5cGVzIiwiUHJvcFR5cGVzIiwic3RyaW5nIiwiaXNSZXF1aXJlZCIsIm9iamVjdCIsIm9uZU9mVHlwZSIsImZ1bmMiLCJkZWZhdWx0UHJvcHMiLCJBVXRhZ3MiLCJkYXJrIiwidGFncyIsImNsYXNzTmFtZSIsIm1hcCIsInRhZyIsImkiLCJib29sIiwiYXJyYXlPZiIsInNoYXBlIl0sIm1hcHBpbmdzIjoiNkZBU0Esb0RBQ0EsNkQsMGlDQUdBOzs7Ozs7O0dBUUEsR0FBTUEsQ0FBQUEsU0FBUyxDQUFHLFFBQVpBLENBQUFBLFNBQVksTUFBaUUsSUFBOURDLENBQUFBLElBQThELE1BQTlEQSxJQUE4RCxDQUF4REMsYUFBd0QsTUFBeERBLGFBQXdELENBQXpDQyxJQUF5QyxNQUF6Q0EsSUFBeUMsY0FBbkNDLEVBQW1DLENBQW5DQSxFQUFtQyxrQkFBOUIsRUFBOEIsU0FBdkJDLGdCQUF1QixxRUFDbEYsR0FBTUMsQ0FBQUEsYUFBYSxDQUFHSixhQUF0QixDQUVBLEdBQUlELElBQUosQ0FBVSxDQUNUO0FBQ0EsR0FBSUssYUFBYSxHQUFLLEdBQXRCLENBQTRCLENBQzNCRCxnQkFBZ0IsQ0FBQ0UsSUFBakIsQ0FBd0JOLElBQ3hCLENBQ0Q7QUFIQSxJQUlLLElBQUksTUFBT0ssQ0FBQUEsYUFBUCxHQUF5QixVQUE3QixDQUEwQyxDQUM5Q0QsZ0JBQWdCLENBQUNHLEVBQWpCLENBQXNCUCxJQUN0QixDQUNELENBRUQsTUFDQyxtQ0FBU0csRUFBVCxDQUVFSCxJQUFJLENBQ0QsNkJBQUMsYUFBRCxDQUFvQkksZ0JBQXBCLENBQXlDRixJQUF6QyxDQURDLENBRUQsb0NBQVdFLGdCQUFYLENBQWdDRixJQUFoQyxDQUpMLENBUUQsQ0F2QkQsQ0EwQkFILFNBQVMsQ0FBQ1MsU0FBVixDQUFzQixDQUNyQlIsSUFBSSxDQUFFUyxtQkFBVUMsTUFESyxDQUVyQlIsSUFBSSxDQUFFTyxtQkFBVUMsTUFBVixDQUFpQkMsVUFGRixDQUdyQlIsRUFBRSxDQUFFTSxtQkFBVUcsTUFITyxDQUlyQlgsYUFBYSxDQUFFUSxtQkFBVUksU0FBVixDQUFvQixDQUFFSixtQkFBVUMsTUFBWixDQUFvQkQsbUJBQVVLLElBQTlCLENBQXBCLENBSk0sQ0FBdEIsQ0FPQWYsU0FBUyxDQUFDZ0IsWUFBVixDQUF5QixDQUN4QmQsYUFBYSxDQUFFLEdBRFMsQ0FBekIsQ0FLQTs7Ozs7Ozs7R0FTQSxHQUFNZSxDQUFBQSxNQUFNLENBQUcsUUFBVEEsQ0FBQUEsTUFBUyxXQUFHQyxDQUFBQSxJQUFILE9BQUdBLElBQUgsQ0FBU2hCLGFBQVQsT0FBU0EsYUFBVCxDQUF3QmlCLElBQXhCLE9BQXdCQSxJQUF4Qix1QkFBOEJDLFNBQTlCLENBQThCQSxTQUE5QiwwQkFBMEMsRUFBMUMsaUJBQWlEZixnQkFBakQsbUZBQ2QsNkNBQUksU0FBUyxtQkFBZWUsU0FBZixhQUE4QkYsSUFBSSxDQUFHLGVBQUgsQ0FBcUIsRUFBdkQsQ0FBYixFQUFpRmIsZ0JBQWpGLEVBRUVjLElBQUksQ0FBQ0UsR0FBTCxDQUNDLFNBQUVDLEdBQUYsQ0FBT0MsQ0FBUCxRQUFjLDhCQUFDLFNBQUQsV0FBVyxhQUFhLENBQUdyQixhQUEzQixDQUEyQyxHQUFHLENBQUdxQixDQUFqRCxFQUEwREQsR0FBMUQsRUFBZCxDQURELENBRkYsQ0FEYyxDQUFmLENBVUFMLE1BQU0sQ0FBQ1IsU0FBUCxDQUFtQixDQUNsQlMsSUFBSSxDQUFFUixtQkFBVWMsSUFERSxDQUVsQkwsSUFBSSxDQUFFVCxtQkFBVWUsT0FBVixDQUNMZixtQkFBVWdCLEtBQVYsQ0FBZ0IsQ0FDZnpCLElBQUksQ0FBRVMsbUJBQVVDLE1BREQsQ0FFZlIsSUFBSSxDQUFFTyxtQkFBVUMsTUFBVixDQUFpQkMsVUFGUixDQUdmUixFQUFFLENBQUVNLG1CQUFVRyxNQUhDLENBQWhCLENBREssRUFNSkQsVUFSZ0IsQ0FTbEJRLFNBQVMsQ0FBRVYsbUJBQVVDLE1BVEgsQ0FVbEJULGFBQWEsQ0FBRVEsbUJBQVVJLFNBQVYsQ0FBb0IsQ0FBRUosbUJBQVVDLE1BQVosQ0FBb0JELG1CQUFVSyxJQUE5QixDQUFwQixDQVZHLENBQW5CLENBYUFFLE1BQU0sQ0FBQ0QsWUFBUCxDQUFzQixDQUNyQmQsYUFBYSxDQUFFLEdBRE0sQ0FBdEIsQyxhQUllZSxNIiwic291cmNlc0NvbnRlbnQiOlsiLyohIEBnb3YuYXUvdGFncyB2My4xLjcgKi9cbi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAqXG4gKiB0YWdzIGZ1bmN0aW9uXG4gKlxuICogVXNlIHRhZ3MgdG8gYXBwbHkgYSB0YXhvbm9teSBhbmQgbGluayB0byBzaW1pbGFyIGNvbnRlbnQuXG4gKlxuICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqL1xuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFByb3BUeXBlcyBmcm9tICdwcm9wLXR5cGVzJztcblxuXG4vKipcbiAqIEEgdGFnIGl0ZW0gaW5zaWRlIHRoZSBBVXRhZ3MgY29tcG9uZW50XG4gKlxuICogQHBhcmFtICB7c3RyaW5nfSAgbGluayAgICAgICAgICAgICAtIFRoZSBsaW5rIGZvciB0aGlzIHRhZywgb3B0aW9uYWxcbiAqIEBwYXJhbSAge3N0cmluZ30gIHRleHQgICAgICAgICAgICAgLSBUaGUgdGV4dCBmb3IgdGhlIHRhZ1xuICogQHBhcmFtICB7b2JqZWN0fSAgbGkgICAgICAgICAgICAgICAtIEFuIGFkZGl0aW9uYWwgb2JqZWN0IHRvIGJlIHNwcmVhZCBpbnRvIHRoZSB3cmFwcGluZyBlbGVtZW50LCBvcHRpb25hbFxuICogQHBhcmFtICB7b2JqZWN0fSAgYXR0cmlidXRlT3B0aW9ucyAtIEFueSBvdGhlciBhdHRyaWJ1dGUgb3B0aW9uc1xuICovXG5jb25zdCBBVXRhZ0l0ZW0gPSAoeyBsaW5rLCBsaW5rQ29tcG9uZW50LCB0ZXh0LCBsaSA9IHt9LCAuLi5hdHRyaWJ1dGVPcHRpb25zIH0pID0+IHtcblx0Y29uc3QgTGlua0NvbXBvbmVudCA9IGxpbmtDb21wb25lbnQ7XG5cblx0aWYoIGxpbmsgKXtcblx0XHQvLyBJZiB3ZSBhcmUgdXNpbmcgYSBub3JtYWwgbGlua1xuXHRcdGlmKCBMaW5rQ29tcG9uZW50ID09PSAnYScgKSB7XG5cdFx0XHRhdHRyaWJ1dGVPcHRpb25zLmhyZWYgPSBsaW5rO1xuXHRcdH1cblx0XHQvLyBJZiB3ZSBhcmUgdXNpbmcgYSBsaW5rIGNvbXBvbmVudFxuXHRcdGVsc2UgaWYoIHR5cGVvZiBMaW5rQ29tcG9uZW50ID09PSAnZnVuY3Rpb24nICkge1xuXHRcdFx0YXR0cmlidXRlT3B0aW9ucy50byA9IGxpbms7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIChcblx0XHQ8bGkgeyAuLi5saSB9PlxuXHRcdFx0e1xuXHRcdFx0XHRsaW5rXG5cdFx0XHRcdFx0PyA8TGlua0NvbXBvbmVudCB7IC4uLmF0dHJpYnV0ZU9wdGlvbnMgfT57IHRleHQgfTwvTGlua0NvbXBvbmVudD5cblx0XHRcdFx0XHQ6IDxzcGFuIHsgLi4uYXR0cmlidXRlT3B0aW9ucyB9PnsgdGV4dCB9PC9zcGFuPlxuXHRcdFx0fVxuXHRcdDwvbGk+XG5cdClcbn07XG5cblxuQVV0YWdJdGVtLnByb3BUeXBlcyA9IHtcblx0bGluazogUHJvcFR5cGVzLnN0cmluZyxcblx0dGV4dDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuXHRsaTogUHJvcFR5cGVzLm9iamVjdCxcblx0bGlua0NvbXBvbmVudDogUHJvcFR5cGVzLm9uZU9mVHlwZShbIFByb3BUeXBlcy5zdHJpbmcsIFByb3BUeXBlcy5mdW5jIF0pLFxufTtcblxuQVV0YWdJdGVtLmRlZmF1bHRQcm9wcyA9IHtcblx0bGlua0NvbXBvbmVudDogJ2EnLFxufTtcblxuXG4vKipcbiAqIERFRkFVTFRcbiAqIFRoZSB0YWdzIGNvbXBvbmVudFxuICpcbiAqIEBwYXJhbSAge2Jvb2xlYW59IGRhcmsgICAgICAgICAgICAgLSBBZGQgdGhlIGRhcmsgdmFyaWF0aW9uIGNsYXNzLCBvcHRpb25hbFxuICogQHBhcmFtICB7YXJyYXl9ICAgdGFncyAgICAgICAgICAgICAtIFRoZSB0YWdzLCBmb3JtYXQ6IHsgbGluazogJycsIHRleHQ6ICcnLCBvbkNsaWNrOiAoKSB9XG4gKiBAcGFyYW0gIHtzdHJpbmd9ICBjbGFzc05hbWUgICAgICAgIC0gQW4gYWRkaXRpb25hbCBjbGFzcywgb3B0aW9uYWxcbiAqIEBwYXJhbSAge29iamVjdH0gIGF0dHJpYnV0ZU9wdGlvbnMgLSBBbnkgb3RoZXIgYXR0cmlidXRlIG9wdGlvbnNcbiAqL1xuY29uc3QgQVV0YWdzID0gKHsgZGFyaywgbGlua0NvbXBvbmVudCwgdGFncywgY2xhc3NOYW1lID0gJycsIC4uLmF0dHJpYnV0ZU9wdGlvbnMgfSkgPT4gKFxuXHQ8dWwgY2xhc3NOYW1lPXsgYGF1LXRhZ3MgJHsgY2xhc3NOYW1lIH0gJHsgZGFyayA/ICdhdS10YWdzLS1kYXJrJyA6ICcnIH1gIH0geyAuLi5hdHRyaWJ1dGVPcHRpb25zIH0+XG5cdFx0e1xuXHRcdFx0dGFncy5tYXAoXG5cdFx0XHRcdCggdGFnLCBpICkgPT4gPEFVdGFnSXRlbSBsaW5rQ29tcG9uZW50PXsgbGlua0NvbXBvbmVudCB9IGtleT17IGkgfSB7IC4uLnRhZyB9IC8+XG5cdFx0XHQpXG5cdFx0fVxuXHQ8L3VsPlxuKTtcblxuQVV0YWdzLnByb3BUeXBlcyA9IHtcblx0ZGFyazogUHJvcFR5cGVzLmJvb2wsXG5cdHRhZ3M6IFByb3BUeXBlcy5hcnJheU9mKFxuXHRcdFByb3BUeXBlcy5zaGFwZSh7XG5cdFx0XHRsaW5rOiBQcm9wVHlwZXMuc3RyaW5nLFxuXHRcdFx0dGV4dDogUHJvcFR5cGVzLnN0cmluZy5pc1JlcXVpcmVkLFxuXHRcdFx0bGk6IFByb3BUeXBlcy5vYmplY3QsXG5cdFx0fSlcblx0KS5pc1JlcXVpcmVkLFxuXHRjbGFzc05hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG5cdGxpbmtDb21wb25lbnQ6IFByb3BUeXBlcy5vbmVPZlR5cGUoWyBQcm9wVHlwZXMuc3RyaW5nLCBQcm9wVHlwZXMuZnVuYyBdKSxcbn07XG5cbkFVdGFncy5kZWZhdWx0UHJvcHMgPSB7XG5cdGxpbmtDb21wb25lbnQ6ICdhJyxcbn07XG5cbmV4cG9ydCBkZWZhdWx0IEFVdGFncztcbiJdfQ==